#pragma once
#include <glbinding/gl/gl.h>
#include "Texture.h"
#include <GLFW/glfw3.h>
#include "Buffer.h"
using namespace gl;

struct GpuNoiseInfo
{
    GLuint64 permTexture;
    GLuint64 simplexTexture;
    GLuint64 gradientTexture;
    float time;
    float heightDensityFactor;
    float noiseScale;
    float noiseSpeed;
};

class SimplexNoise
{
public:
    SimplexNoise();

    float m_time;
    float m_densityFactor = 0.0f;
    float m_noiseScale = 0.01f;
    float m_noiseSpeed = 0.1f;

    void bindNoiseBuffer(BufferBindings::Binding binding) const;
    Buffer& getNoiseBuffer();

    bool showNoiseGUI();
    bool showNoiseGUIContent();

private:
    Texture m_permTexture{ GL_TEXTURE_2D, GL_NEAREST, GL_NEAREST };
    Texture m_simplexTexture{ GL_TEXTURE_1D, GL_NEAREST, GL_NEAREST };
    Texture m_gradientTexture{ GL_TEXTURE_2D, GL_NEAREST, GL_NEAREST };

    Buffer m_noiseSSBO{ GL_SHADER_STORAGE_BUFFER };

    const std::array<int,256> m_perm{ 151,160,137,91,90,15,
        131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
        190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,
        88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,
        77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,
        102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,
        135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
        5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,
        223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,
        129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
        251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
        49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180 };
    //gradients for 4d noise, midpoints of each edge of a tesseract
    const std::array<std::array<int, 4>, 32> m_gradient4{ { { 0,1,1,1 },{ 0,1,1,-1 },{ 0,1,-1,1 },{ 0,1,-1,-1 }, // 32 tesseract edges
    { 0,-1,1,1 },{ 0,-1,1,-1 },{ 0,-1,-1,1 },{ 0,-1,-1,-1 },
    { 1,0,1,1 },{ 1,0,1,-1 },{ 1,0,-1,1 },{ 1,0,-1,-1 },
    { -1,0,1,1 },{ -1,0,1,-1 },{ -1,0,-1,1 },{ -1,0,-1,-1 },
    { 1,1,0,1 },{ 1,1,0,-1 },{ 1,-1,0,1 },{ 1,-1,0,-1 },
    { -1,1,0,1 },{ -1,1,0,-1 },{ -1,-1,0,1 },{ -1,-1,0,-1 },
    { 1,1,1,0 },{ 1,1,-1,0 },{ 1,-1,1,0 },{ 1,-1,-1,0 },
    { -1,1,1,0 },{ -1,1,-1,0 },{ -1,-1,1,0 },{ -1,-1,-1,0 } } };
    //simplex lookup table
    const std::array<std::array<unsigned char, 4>, 64> m_simplex4{ { { 0,64,128,192 },{ 0,64,192,128 },{ 0,0,0,0 },
    { 0,128,192,64 },{ 0,0,0,0 },{ 0,0,0,0 },{ 0,0,0,0 },{ 64,128,192,0 },
    { 0,128,64,192 },{ 0,0,0,0 },{ 0,192,64,128 },{ 0,192,128,64 },
    { 0,0,0,0 },{ 0,0,0,0 },{ 0,0,0,0 },{ 64,192,128,0 },
    { 0,0,0,0 },{ 0,0,0,0 },{ 0,0,0,0 },{ 0,0,0,0 },
    { 0,0,0,0 },{ 0,0,0,0 },{ 0,0,0,0 },{ 0,0,0,0 },
    { 64,128,0,192 },{ 0,0,0,0 },{ 64,192,0,128 },{ 0,0,0,0 },
    { 0,0,0,0 },{ 0,0,0,0 },{ 128,192,0,64 },{ 128,192,64,0 },
    { 64,0,128,192 },{ 64,0,192,128 },{ 0,0,0,0 },{ 0,0,0,0 },
    { 0,0,0,0 },{ 128,0,192,64 },{ 0,0,0,0 },{ 128,64,192,0 },
    { 0,0,0,0 },{ 0,0,0,0 },{ 0,0,0,0 },{ 0,0,0,0 },
    { 0,0,0,0 },{ 0,0,0,0 },{ 0,0,0,0 },{ 0,0,0,0 },
    { 128,0,64,192 },{ 0,0,0,0 },{ 0,0,0,0 },{ 0,0,0,0 },
    { 192,0,64,128 },{ 192,0,128,64 },{ 0,0,0,0 },{ 192,64,128,0 },
    { 128,64,0,192 },{ 0,0,0,0 },{ 0,0,0,0 },{ 0,0,0,0 },
    { 192,64,0,128 },{ 0,0,0,0 },{ 192,128,0,64 },{ 192,128,64,0 } } };
};